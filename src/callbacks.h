#ifndef CALLBACKS_H
#define CALLBACKS_H


gboolean tea_init (gpointer data);
void scan_links (void);
void on_mni_funx_ins_time (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_Markup_comment (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_Markup_br (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_view_wrap (GtkMenuItem *menuitem, gpointer user_data);
void on_notebook1_switch_page (GtkNotebook *notebook, gpointer *page, guint page_num, gpointer user_data);
void on_mni_file_save_version (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_reverse (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_case_locase_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_case_upcase_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_new_file_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_file_open_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_file_save_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_file_save_as_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_out_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_nav_block_start (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_nav_block_end (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_Markup_bold_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_Markup_italic_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_Markup_underline_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_Markup_para_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_file_close_current (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_Functions_number_arabian2roman (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_view_show_line_numbers (GtkMenuItem *menuitem, gpointer user_data);
void on_button_close (GtkWidget *wid, gpointer data);
void on_mni_html_default_template (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_file_save_session (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_open_session_activate (GtkMenuItem *menuitem, gpointer user_data);
//void on_mni_session_file_open_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_antispam (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_Functions_number_hex2dec (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_config_open (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_Markup_link_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_utils_stats (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_Functions_number_bin2dec (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_file_open_at_cursor (GtkMenuItem* menuitem, gpointer user_data);
void on_mni_Markup_nbsp (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_undo (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_redo (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_markup_select_color_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_image_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_html_strip_tags (GtkMenuItem* menuitem, gpointer user_data);
void on_mni_html_enclose_link (GtkMenuItem *menuitem, gpointer user_data);
gboolean on_ent_search_key_press_event (GtkWidget *widget, GdkEventKey *event, gpointer user_data);
void on_mni_quest_find (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_quest_find_next (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_func_strings_removeblanks (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_func_strings_sort (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_func_strings_enclose (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_func_strings_rev (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_search_repall (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_recent_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_about_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_file_new_from_template (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_file_save_as_template_activate (GtkMenuItem *menuitem, gpointer user_data);
void show_save_as_dlg (int mode);
void on_mni_file_edit_at_cursor (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_get_links (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_new_link_select (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_co_select (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_markup_align (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_html_make_table (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_file_revert_to_saved (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_goto_line (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_convert_ascii_2_html (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_func_filter_exclude_from_list (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_func_filter_antiexclude_from_list (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_html_calc_weight (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_get_src (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_file_backup (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_file_add_bookmark (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_file_open_bookmark (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_real_recent_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_test (GtkMenuItem *menuitem, gpointer user_data);
//void on_mni_refresh_hl (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_make_numbering (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_open_hotkeys (GtkMenuItem *menuitem, gpointer user_data);
void tea_win_on_drag_data_lcb(GtkWidget *widget, GdkDragContext *context, gint x, gint y, GtkSelectionData *data, guint info, guint time);
void set_dnd_accept (GtkWidget *widget);
gboolean on_tea_window_delete_event (GtkWidget *widget, GdkEvent *event, gpointer user_data);
void on_mni_snippet_click (GtkMenuItem *menuitem, gpointer user_data);
//void on_mni_snippet_file_open_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_file_save_as_snippet_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_dump_menu (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_nav_goto_prev_tab (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_nav_focus_to_text (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_nav_focus_to_famous (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_tools_unitaz_sort (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_tools_unitaz_plain (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_str_kill_dups (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_extract_words (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_tools_unitaz_sort_by_count (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_edit_copy_all (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_edit_copy_current_url (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_edit_replace_with_clipboard (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_count_string_list (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_paste_to_new (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_copy_to_new (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_cut_to_new (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_shuffle_strings (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_tools_unitaz_sort_caseinsens (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_tools_unitaz_sort_by_count_caseinsens (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_cure (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_tabs_to_spaces (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_spaces_to_tabs (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_edit_delete_current_line (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_paste (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_edit_copy (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_edit_cut (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_edit_delete (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_edit_select_all (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_sort_case_insensetive (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_new_filenav (GtkMenuItem *menuitem, gpointer user_data);
void on_but_refresh (void);
//void on_mni_new_file_open_select_enc (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_kill_formatting (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_wrap_raw (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_wrap_on_spaces (GtkMenuItem *menuitem, gpointer user_data);
void on_doit_button (GtkButton *button, gpointer user_data);
void on_mni_kill_formatting_on_each_line (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_file_crapbook (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_spellcheck (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_filter_kill_lesser (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_filter_kill_more_than (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_func_strings_sort_by_q (GtkMenuItem* menuitem, gpointer user_data);
void on_mni_tabs_menuitem_click (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_show_images_in_text (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_nav_goto_recent_tab (GtkMenuItem* menuitem, gpointer user_data);
void on_mni_nav_goto_next_tab (GtkMenuItem* menuitem, gpointer user_data);
void on_mni_view_hide_highlighting (GtkMenuItem* menuitem, gpointer user_data);
void on_mni_nav_goto_first_tab (GtkMenuItem* menuitem, gpointer user_data);
void on_mni_nav_goto_last_tab (GtkMenuItem* menuitem, gpointer user_data);
void on_mni_nav_goto_selection (GtkMenuItem* menuitem, gpointer user_data);
void on_mni_quest_find_ncase (GtkMenuItem* menuitem, gpointer user_data);
void on_mni_quest_find_next_ncase (GtkMenuItem* menuitem, gpointer user_data);
void on_mni_user_menu_open (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_user_menu_item (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_find_and_replace_wnd (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_rtfm (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_crackerize (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_show_options (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_new_kwas (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_help_item (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_open_kwas_bookmarks_file (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_eol_to_crlf (GtkMenuItem* menuitem, gpointer user_data);
void on_mni_eol_to_lf (GtkMenuItem* menuitem, gpointer user_data);
//void on_mni_templ_file_open_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_upcase_each_first_letter_ofw (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_nav_mplayer_jump (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_open_open_movie (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_open_base64_activate (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_insert_doctype (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_entity (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_sessions_click (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_templates_click (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_morse_encode (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_morse_decode (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_set_hl_mode (GtkMenuItem *menuitem, gpointer user_data);
gboolean on_editor_keypress (GtkWidget *widget, GdkEventKey *event, gpointer data);
void on_mni_jump_to_saved_pos (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_save_pos (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_unindent (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_indent (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_autorep_file_open (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_strings_remove_trailing_whitespaces (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_strings_remove_leading_whitespaces (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_edit_append_to_crapbook (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_load_last_file (GtkMenuItem *menuitem, gpointer user_data);
void on_source_header_switch (GtkMenuItem *menuitem, gpointer user_data);
gboolean cb_logmemo_button_press_event (GtkWidget *widget, GdkEventButton *event, gpointer user_data);
void on_mni_show_project_props (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_project_new (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_project_save_as (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_project_open (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_show_project_save (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_project_make (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_show_project_run (GtkMenuItem *menuitem, gpointer user_data);
void file_new (void);
void file_save (void);
void file_save_as (void);
void file_open (void);
void edit_copy (void);
void edit_cut (void);
void edit_paste (void);
void show_options (void);
void on_mni_add_to_autosave_list (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_autosave_list_open (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_string_unquote (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_copy_filename (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_quote_string (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_file_close_all (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_markup_wiki_internal_link (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_mm_change (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_imageplane (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_ins_np (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_doc_close_all (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_quotes_to_tex (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_latex_process (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_dvi_to_ps (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_view_dvi (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_dvi_to_pdf (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_view_pdf (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_view_ps (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_split_to_tex_paragraphs (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_markup_list_item (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_markup_common (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_markup_tex_begend (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_markup_col (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_markup_row (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_markup_table (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_markup_itemizedlist (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_markup_enumeratedlist (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_markup_em (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_calendar (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_markup_section (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_markup_chap (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_markup_tex_common (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_pdflatex_process (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_close_current_tag (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_csv_to_latex_table (GtkMenuItem* menuitem, gpointer user_data);
void select_charset_fileopen (GtkComboBox *combobox, gpointer user_data);
void select_charset_filesave (GtkComboBox *combobox, gpointer user_data);
void on_mni_ins_ast (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_text_to_html_fmt (GtkMenuItem *menuitem, gpointer user_data);
GtkWidget* lookup_widget2 (GtkContainer *widget, const gchar *widget_name);
void on_bt_open (GtkButton *button, gpointer user_data);
void on_mni_fam_open (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_fullscreen (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_unfullscreen (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_copied_html_to_ftext (GtkMenuItem* menuitem, gpointer user_data);
void on_mni_move_line_up (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_move_line_down (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_save_all (GtkMenuItem *menuitem, gpointer user_data);
gboolean save_all_cb (gpointer data);
void tea_file_open_dialog (void);
void tea_file_save_dialog (int mode);
void on_mni_paint (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_copy_painted (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_unpaint_all (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_search_and_paint (GtkMenuItem* menuitem, gpointer user_data);
void on_mni_paint_lines_bigger_than (GtkMenuItem* menuitem, gpointer user_data);
void event_after (GtkWidget *widget, GdkEvent *event, gpointer user_data);
void on_mni_ext_programs_menu_item (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_ext_programs_file_open (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_mark_each_n_line (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_crashfile_open (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_mark_all_lines_with_string (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_suggest (GtkMenuItem *menuitem, gpointer user_data);
void on_bt_close_current_doc (GtkButton *button, gpointer user_data);
void on_mni_hide_error_marks (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_spellcheck_def (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_split_by (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_split_after_delimiter (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_replace_in_place (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_repeat_the_last (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_mark_on_regexp (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_test2 (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_find_in_files (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_mark_lines_with_fuzzy_nontrans (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_lorem_ipsum (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_rtfm_en (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_extract_at_each_line (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_refresh_ctags (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_browse_symbol_decl (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_extract_at_each_line_aft_sep (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_extract_at_each_line_bef_sep (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_mass_encode (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_self_check (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_quotes_to_facing_quotes (GtkMenuItem *menuitem, gpointer user_data);
void tea_handle_param (const gchar *p);
void on_mni_script_click (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_calc (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_load_autosaved_session (GtkMenuItem *menuitem, gpointer user_data);
void scan_missing_local_links (void);
void set_dnd_accept_notebook (GtkWidget *widget);
void set_dnd_accept_tab (GtkWidget *widget);
void on_mni_reptables_click (GtkMenuItem *menuitem, gpointer user_data);
void file_save_as_reptable (void);
void on_mni_screenshot_window (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_screenshot_screen (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_screenshot_region (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_screenshot_clipboard (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_dec2hex (GtkMenuItem *menuitem, gpointer user_data);
#ifdef PRINTING_SUPPORTED
void on_mni_print (GtkMenuItem *menuitem, gpointer user_data);
#endif

void on_mni_profiles_click (GtkMenuItem *menuitem, gpointer user_data);
void load_profile (const gchar *filename);
void save_profile (const gchar *filename);
void on_mni_file_save_profile (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_utils_readability (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_func_filter_regexp_exclude_from_list (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_func_filter_regexp_incl_to_list (GtkMenuItem *menuitem, gpointer user_data);
void set_fam_text (const gchar *def);
void on_mni_eol_to_cr (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_grep (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_save_packed (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_toggle_topmost (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_Functions_number_roman2arabian (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_add_to_dict (GtkMenuItem *menuitem, gpointer user_data);
void on_mni_check_links (GtkMenuItem *menuitem, gpointer user_data);


GList* get_menu_items (void);

#endif 